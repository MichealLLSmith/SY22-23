<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jSsZXwtY9ZJbqQzAHtiO0VKlSh9Rk8j0f//Z
</value>
  </data>
</root>